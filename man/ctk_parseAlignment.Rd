% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapperFunctions_ctk.R
\docType{methods}
\name{ctk_parseAlignment}
\alias{ctk_parseAlignment}
\title{Wrapper function for ctk's parseAlignment}
\usage{
ctk_parseAlignment(
  filesToRun,
  outFile = paste0(file_path_sans_ext(filesToRun), ".bed"),
  sb = "parseAlignment.pl",
  perl = "perl",
  PATHTOPERLLIB = NULL,
  mutationFile = NULL,
  mapQual = NULL,
  minLen = NULL,
  indelToEnd = 5,
  splitDel = FALSE,
  indelInScore = FALSE,
  stderr = paste0(getwd(), "stripBarcode_stderr"),
  stdout = paste0(getwd(), "stripBarcode_stdout"),
  useClipRConda = ifelse(is.null(getOption("CLIPflexR.condaEnv")), FALSE, TRUE),
  additionalArgumements = NULL,
  verbose = FALSE
)
}
\arguments{
\item{filesToRun}{File to process.}

\item{outFile}{Output file}

\item{sb}{Path to parseAlignment.pl from FastX toolkit}

\item{perl}{Path to PERL}

\item{PATHTOPERLLIB}{Path to PERL5LIB.}

\item{mutationFile}{Mutation file path.}

\item{mapQual}{Minimum map quality}

\item{minLen}{Minimum length of read}

\item{indelToEnd}{Minimum distance from indel to end of read.}

\item{splitDel}{Whether to split reads with deletions.}

\item{indelInScore}{Include indels in mutation score count.}

\item{stderr}{Path to stdout file.}

\item{stdout}{Path to stdout file.}

\item{useClipRConda}{Boolean on whether to use conda environment install by CondaSysReqs}

\item{additionalArgumements}{Additional arguments to be passed to system call.}

\item{verbose}{Print more message to screen.}
}
\value{
Path to unzipped file
}
\description{
Wrapper function for ctk's parseAlignment
}
\examples{
testFasta <- system.file("extdata/hg19Small.fa",package="clipR")
myIndex <- bowtie2_index(testFasta)
testFQ <- system.file("extdata/Fox3_Std_small.fq.gz",package="clipR")
FqFile_FF <- ctk_fastqFilter(testFQ,qsFilter = "mean:0-29:20",verbose=TRUE)
FqFile <- decompress(FqFile_FF,overwrite=TRUE)
FqFile_clipped <- fastx_clipper(FqFile,length=20)
FqFile_QF <- fastq_quality_trimmer(FqFile_clipped)
FqFile_QF <- fastq_quality_trimmer(FqFile_clipped,paste0(FqFile_QF,".gz"))
FqFile_Col <- ctk_fastq2collapse(FqFile_QF,verbose=TRUE)
FqFile_QFColStripped <- ctk_stripBarcode(FqFile_Col,linkerlength=5)
bam <- bowtie_align(FqFile_QFColStripped,myIndex)
parsedAlignment <- ctk_parseAlignment(bam)
}
\author{
Kathryn Rozen-Gagnon
}
