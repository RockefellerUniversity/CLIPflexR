% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapperFunctions_ctk.R
\docType{methods}
\name{ctk_stripBarcode}
\alias{ctk_stripBarcode}
\title{Wrapper function for ctk's stripBarcode}
\usage{
ctk_stripBarcode(
  filesToRun,
  outFile = paste(file_path_sans_ext(fileToRun), "_rm5.", file_ext(fileToRun), sep =
    ""),
  sb = "stripBarcode.pl",
  perl = "perl",
  PATHTOPERLLIB = NULL,
  linkerlength = 27,
  inputFormat = "fasta",
  barcodeStartWith = NULL,
  barcodeEndWith = NULL,
  stderr = file.path(dirname(fileToRun), paste0(basename(fileToRun),
    "_stripBarcode_stderr.txt")),
  stdout = file.path(dirname(fileToRun), paste0(basename(fileToRun),
    "_stripBarcode_stdout.txt")),
  useClipRConda = ifelse(is.null(getOption("CLIPflexR.condaEnv")), FALSE, TRUE),
  additional_Args = NULL,
  verbose = FALSE,
  writelog = T
)
}
\arguments{
\item{filesToRun}{path to file to process (fastq or fasta).}

\item{outFile}{path to output file (fastq or fasta).}

\item{sb}{path to stripBarcode.pl from CTK.}

\item{perl}{path to PERL.}

\item{PATHTOPERLLIB}{path to PERL5LIB.}

\item{linkerlength}{length of barcode/linker sequences (default is 27).}

\item{inputFormat}{input file format, "fasta" (default) or "fastq"}

\item{barcodeStartWith}{filter sequences based on the starting nucleotides in the barcode.}

\item{barcodeEndWith}{filter sequences based on the ending nucleotides in the barcode.}

\item{stderr}{path to stdout file.}

\item{stdout}{path to stdout file.}

\item{useClipRConda}{use conda environment installed by Herper, TRUE (default) or FALSE.}

\item{additional_Args}{additional arguments to be passed to system call.}

\item{verbose}{print messages, TRUE or FALSE (default).}

\item{writelog}{write stderr/stdout logs, TRUE (default) or FALSE.}
}
\value{
path to file with index stripped, in the same format as the input file.
}
\description{
Wrapper function for ctk's stripBarcode
}
\examples{
testFQ <- system.file("extdata/Fox3_Std_small.fq.gz",package="CLIPflexR")
FqFile_FF <- ctk_fastqFilter(testFQ,qsFilter="mean:0-29:20",verbose=TRUE)
FqFile <- decompress(FqFile_FF,overwrite=TRUE)
FqFile_clipped <- fastx_clipper(FqFile,length=20)
FqFile_QF <- fastq_quality_trimmer(FqFile_clipped)
FqFile_Col <- ctk_fastq2collapse(FqFile_QF,verbose=TRUE)
FqFile_QFColStripped <- ctk_stripBarcode(FqFile_Col,linkerlength=5,inputFormat="fastq")
}
\author{
Kathryn Rozen-Gagnon
}
