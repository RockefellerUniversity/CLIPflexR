% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/wrapperFunctions_ctk.R
\docType{methods}
\name{ctk_tag2peak}
\alias{ctk_tag2peak}
\title{Wrapper function for ctk's bed2rgb}
\usage{
ctk_tag2peak(
  filesToRun,
  outFile = paste0(file_path_sans_ext(filesToRun), ".peak.bed"),
  outBoundary = paste0(file_path_sans_ext(filesToRun), ".boundary.bed"),
  outHalfPH = paste0(file_path_sans_ext(filesToRun), ".halfPF.bed"),
  sb = "tag2peak.pl",
  perl = "perl",
  PATHTOPERLLIB = NULL,
  bigFile = FALSE,
  ss = TRUE,
  valleySeeking = TRUE,
  valleyDepth = 0.9,
  genes = NULL,
  multiTest = FALSE,
  useExpr = FALSE,
  skipOutOfRangePeaks = FALSE,
  pCutOff = 0.01,
  minPH = 2,
  maxPH = -1,
  gap = -1,
  peakPrefix = "Peak",
  stderr = paste0(getwd(), "stripBarcode_stderr"),
  stdout = paste0(getwd(), "stripBarcode_stdout"),
  useClipRConda = ifelse(is.null(getOption("CLIPflexR.condaEnv")), FALSE, TRUE),
  additionalArgumements = NULL,
  verbose = FALSE
)
}
\arguments{
\item{filesToRun}{File to process.}

\item{outFile}{Output file}

\item{outBoundary}{output cluster boundaries}

\item{outHalfPH}{output half peak height boundaries}

\item{sb}{Path to tag2collapse.pl from FastX toolkit}

\item{perl}{Path to PERL}

\item{PATHTOPERLLIB}{Path to PERL5LIB.}

\item{bigFile}{big input file}

\item{ss}{separate the two strands}

\item{valleySeeking}{find candidate peaks by valley seeking}

\item{valleyDepth}{depth of valley if valley seeking (between 0.5 and 1, default=0.9)}

\item{genes}{custom gene bed file for scan statistics (will override --dbkey)}

\item{multiTest}{do Bonferroni multiple test correction}

\item{useExpr}{use expression levels given in the score column in the gene bed file for normalization}

\item{skipOutOfRangePeaks}{Remove out of bounds ranges.}

\item{pCutOff}{threshold of p-value to call peak (e.g. 0.01)}

\item{minPH}{min peak height}

\item{maxPH}{max peak height}

\item{gap}{merge cluster peaks closer than the gap (-1, no merge if < 0)}

\item{peakPrefix}{prefix of peak id (Peak) (so output file will look like Peak1, Peak2, etc)}

\item{stderr}{Path to stdout file.}

\item{stdout}{Path to stdout file.}

\item{useClipRConda}{Boolean on whether to use conda environment install by Herper}

\item{additionalArgumements}{Additional arguments to be passed to system call.}

\item{verbose}{Print more message to screen.}
}
\value{
Path to unzipped file
}
\description{
Wrapper function for ctk's bed2rgb
}
\examples{
testFasta <- system.file("extdata/hg19Small.fa",package="CLIPflexR")
myIndex <- bowtie2_index(testFasta)
testFQ <- system.file("extdata/Fox3_Std_small.fq.gz",package="CLIPflexR")
FqFile_FF <- ctk_fastqFilter(testFQ,qsFilter = "mean:0-29:20",verbose=TRUE)
FqFile <- decompress(FqFile_FF,overwrite=TRUE)
FqFile_clipped <- fastx_clipper(FqFile,length=20)
FqFile_QF <- fastq_quality_trimmer(FqFile_clipped)
FqFile_QF <- fastq_quality_trimmer(FqFile_clipped,paste0(FqFile_QF,".gz"))
FqFile_Col <- ctk_fastq2collapse(FqFile_QF,verbose=TRUE)
FqFile_QFColStripped <- ctk_stripBarcode(FqFile_Col,linkerlength=5)
bam <- bowtie_align(FqFile_QFColStripped,myIndex)
parsedAlignment <- ctk_parseAlignment(bam)
myCollaped <- ctk_tag2collapse(parsedAlignment,weight=FALSE,randomBarcode=FALSE,
weightInName=FALSE,verbose=TRUE)
myrgbBed <- ctk_bed2rgb(myCollaped,col="128,0,0")
ctk_tag2profile(myrgbBed,verbose=TRUE)
}
\author{
Kathryn Rozen-Gagnon
}
